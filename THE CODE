import requests
import re
from bs4 import BeautifulSoup
import pandas as pd
import time

def html_stripper(text):
    return re.sub('<[^<]+?>', '', str(text))
    
def getPrice(flat_page):
    price = flat_page.find('div', attrs={'class':'object_descr_price'})
    price = re.split('<div>|руб|\W', str(price))
    price = "".join([i for i in price if i.isdigit()][-3:])
    return int(price)
    
def getCoords(flat_page):
    coords = flat_page.find('div', attrs={'class':'map_info_button_extend'}).contents[1]
    coords = re.split('&amp|center=|%2C', str(coords))
    coords_list = []
    for item in coords:
        if item[0].isdigit():
            coords_list.append(item)
    lat = float(coords_list[0])
    lon = float(coords_list[1])
    return lat, lon
    
def getRoom(flat_page):
    rooms = flat_page.find('div', attrs={'class':'object_descr_title'})
    rooms = html_stripper(rooms)
    room_number = ''
    for i in re.split('-|\n', rooms):
        if 'комн' in i:
            break
        else:
            room_number += i
    room_number = "".join(room_number.split())
    return room_number
    
def getTotsp(flat_page):
     area=flat_page.find('div', attrs={'class': 'clearfix'})
     area=str(area)
     line1='Общая площадь:</th>\n<td>\n<i class="object_descr_details_color"></i>'
     n1=int(area.find(line1))
     area=area[(n1+len(line1)):(n1+len(line1)+10)]
     line2='\xa0'
     n2=int(area.find(line2))    
     area=area[0:n2].replace(',','.')
     if area.find('–')!=-1 : return 'Nan'
     area=float(area)
     return area
 
def getLivesp(flat_page):
     area=flat_page.find('div', attrs={'class': 'clearfix'})
     area=str(area)
     line1='Жилая площадь:</th>\n<td>\n<i class="object_descr_details_color" style="background-color:#90C090"></i>'
     n1=int(area.find(line1))
     area=area[(n1+len(line1)):(n1+len(line1)+10)]
     line2='\xa0'
     n2=int(area.find(line2))    
     area=area[0:n2].replace(',','.')
     if area.find('–')!=-1 : return 'NaN'
     area=float(area)
     return area
     
def getKitsp(flat_page):
     area=flat_page.find('div', attrs={'class': 'clearfix'})
     area=str(area)
     line1='Площадь кухни:</th>\n<td>\n<i class="object_descr_details_color" style="background-color:#C09090"></i>'
     n1=int(area.find(line1))
     area=area[(n1+len(line1)):(n1+len(line1)+10)]
     line2='\xa0'
     n2=int(area.find(line2))    
     area=area[0:n2].replace(',','.')
     if area.find('–')!=-1 : return 'NaN'
     area=float(area)
     return area
     
def getFloor(flat_page):
     area=flat_page.find('div', attrs={'class': 'clearfix'})
     area=str(area)
     line1='Этаж:</th>\n<td>\n'
     line2='</td>\n</tr>\n<tr>\n<th>'
     line3='\xa0'
     n1=int(area.find(line1))
     n2=int(area.find(line2,n1))
     area=area[(n1+len(line1)):n2]
     n3=area.find(line3)
     Floor= float(area[0:n3])
     return Floor
     
     
def getNfloors(flat_page):
     area=flat_page.find('div', attrs={'class': 'clearfix'})
     area=str(area)
     line1='Этаж:</th>\n<td>\n'
     line2='</td>\n</tr>\n<tr>\n<th>'
     line3='/\xa0'
     n1=int(area.find(line1))
     n2=int(area.find(line2,n1))
     area=area[(n1+len(line1)):n2]
     n3=area.find(line3)
     if n3==-1 : return 'NaN'
     NFloors=float(area[n3+2:])
     return NFloors

def getBalcony(flat_page):
    area=flat_page.find('div', attrs={'class': 'clearfix'})
    area=str(area)
    line1='Балкон:</th>\n<td><i class="object_descr_details_color" style="background-color:#C0C0C0"></i>'
    line2='</td>'
    n1=int(area.find(line1))
    if n1==-1 : return 'NaN'
    n2=int(area.find(line2,n1))
    area=area[n1+len(line1):n2]
    if area.find('нет')==-1 or area.find('–')==-1 :  
        return 1
    else:
        return 0
        
def getTel(flat_page):
    area=flat_page.find('div', attrs={'class': 'clearfix'})
    area=str(area)  
    line1='Телефон:</th>\n<td>'
    line2='</td>'
    n1=int(area.find(line1))
    if n1==-1 : return 'NaN'
    n2=int(area.find(line2,n1))
    area=area[n1+len(line1):n2]
    if area.find('нет')==-1 or area.find('–')==-1 :  
        return 1
    else:
        return 0
        
def getNew(flat_page):
    area=flat_page.find('div', attrs={'class': 'clearfix'})
    area=str(area)
    line1='новостройка'
    line2='первичный рынок' 
    line3='вторичка'
    if area.find(line1)!=-1 or area.find(line2)!=-1 : return 1   
    if area.find(line3)!= -1 : return 0
    return 'NaN' 
    
    
def getBrick(flat_page):
    area=flat_page.find('div', attrs={'class': 'clearfix'})
    area=str(area)
    line1='кирпичный'
    line2='монолитный' 
    line3='панельный'
    if area.find(line1)!=-1 or area.find(line2)!=-1 or area.find(line3)!=-1: return 1   
    return 0      
    
def getMetrdist(flat_page):
    area=flat_page.find('span', attrs={'class': 'object_item_metro_comment'})
    area=html_stripper(area)
    area=str(area)
    area=area[1:]
    n1=area.find('\n')
    area=area[:n1]
    Min=float(area)
    return Min
    
def getWalk(flat_page):
    area=flat_page.find('span', attrs={'class': 'object_item_metro_comment'})
    area=html_stripper(area)
    area=str(area)
    n1=area.find('пешком')
    if n1!=-1 : return 1
    return 0
